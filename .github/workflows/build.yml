name: Build

on: push

env:
  FORCE_COLOR: true
  netBuildPlatform: "Any CPU"
  netBuildConfiguration: "Release"

jobs:
  build:
    runs-on: ${{ matrix.imageName }}
    strategy:
      matrix:
        imageName: [windows-latest, macos-10.15, ubuntu-22.04]
        include:
          - imageName: windows-latest
            jobArchName: "Windows"
            agentArch: "windows"
            artifactPrefix: "windows."
            artifactSuffix: ""
            netbuilder: "core"
            lualibs: "prebuilt"
            loveURL: "https://github.com/love2d/love/releases/download/11.3/love-11.3-win32.zip"
            loveZIP: "love.zip"
            loveTAR: ""
            loveBinaryDirectory: ""
            loveResourcesDirectory: ""
            loveBinary: "love.exe"
          - imageName: macos-10.15
            jobArchName: "macOS"
            agentArch: "macOS"
            artifactPrefix: "macos."
            artifactSuffix: ""
            netbuilder: "mono"
            monokickURL: "https://github.com/flibitijibibo/MonoKickstart.git"
            lualibs: "luarocks"
            luarocksPreArgs: "--lua-dir=/usr/local/opt/lua@5.1"
            luarocksArgs: 'LUA_LIBDIR="/usr/local/opt/lua@5.1/lib"'
            loveURL: "https://github.com/love2d/love/releases/download/11.3/love-11.3-macos.zip"
            loveZIP: "love.zip"
            loveTAR: ""
            loveBinaryDirectory: "love.app/Contents/MacOS/"
            loveResourcesDirectory: "love.app/Contents/Resources/"
            launcher: ""
          - imageName: ubuntu-22.04
            jobArchName: "linux"
            agentArch: "linux"
            artifactPrefix: "linux."
            artifactSuffix: ""
            netbuilder: "mono"
            monokickURL: "https://github.com/flibitijibibo/MonoKickstart.git"
            lualibs: "luarocks"
            luarocksArgs: 'LUA_LIBDIR="/usr/local/opt/lua/lib"'
            loveURL: "https://github.com/love2d/love/releases/download/11.3/love-11.3-linux-x86_64.tar.gz"
            loveZIP: ""
            loveTAR: "love.tar.gz"
            loveBinaryDirectory: ""
            loveResourcesDirectory: ""
            launcher: ""

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: "recursive"
          fetch-depth: 3
      - name: Setup dotnet
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: "6.0.x"
          include-prerelease: true
      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1.1

      # Prepare dependencies {{{
      # Use brew on macOS.
      - name: "Setup: macOS: brew: install lua lua@5.1 luarocks"
        if: ${{ success() && matrix.agentArch == 'macOS' }}
        run: |
          export HOMEBREW_NO_INSTALL_CLEANUP=1
          brew install lua lua@5.1 luarocks

      # Use apt on Ubuntu.
      - name: "Setup: Linux: apt: install luarocks and deps"
        if: ${{ success() && matrix.agentArch == 'linux' }}
        run: |
          sudo apt -y update && sudo apt -y install luarocks libgtk-3-dev

      # Cross platform setup.
      - name: "Setup: luarocks: config"
        if: ${{ success() && matrix.lualibs == 'luarocks' }}
        run: |
          git config --global url."https://github.com/".insteadOf git://github.com/
          luarocks config lua_version 5.1
          luarocks
      # }}}
      # Build LuaRocks dependencies. {{{
      - name: "Build: luarocks: install subprocess"
        if: ${{ success() && matrix.lualibs == 'luarocks' }}
        run: |
          luarocks ${{ matrix.luarocksPreArgs }} install --tree=luarocks https://raw.githubusercontent.com/0x0ade/lua-subprocess/master/subprocess-scm-1.rockspec ${{ matrix.luarocksArgs }}
      - name: "Build: luarocks: install nfd"
        if: ${{ success() && matrix.lualibs == 'luarocks' }}
        run: |
          luarocks ${{ matrix.luarocksPreArgs }} install --tree=luarocks https://raw.githubusercontent.com/Vexatos/nativefiledialog/master/lua/nfd-scm-1.rockspec ${{ matrix.luarocksArgs }}
      - name: "Build: luarocks: install lsqlite3complete"
        if: ${{ success() && matrix.lualibs == 'luarocks' }}
        run: |
          luarocks ${{ matrix.luarocksPreArgs }} install --tree=luarocks lsqlite3complete ${{ matrix.luarocksArgs }}
      # }}}
      # Build sharp. {{{
      # Use dotnet to restore NuGet packages even when building with mono.
      - name: "Build: dotnet: restore sharp"
        run: |
          dotnet restore sharp/*.csproj --verbosity Detailed
      - name: "Build: dotnet: build sharp"
        if: ${{ success() && matri.netbuilder == 'core' }}
        run: |
          dotnet build sharp/*.csproj --configuration $(netBuildConfiguration) "/p:Configuration=$(netBuildConfiguration)"
      # }}}
